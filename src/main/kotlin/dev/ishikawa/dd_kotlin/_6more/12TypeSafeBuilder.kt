package dev.ishikawa.dd_kotlin._6more

fun main() {
    val user = user {
        head("HAIR!!")
        body {
            arms("FINGER!!")
            legs("FEET!!!")
        }
    }
    println(user)
}

/*
TypeSafe Builder
次のようなコードを作るために。
fun result() =
    html {
        head {
            title {+"XML encoding with Kotlin"}
        }
        body {
            h1 {+"XML encoding with Kotlin"}
            p  {+"this format can be used as an alternative markup to XML"}

            // an element with attributes and text content
            a(href = "http://kotlinlang.org") {+"Kotlin"}

            // mixed content
            p {
                +"This is some"
                b {+"mixed"}
                +"text. For more see the"
                a(href = "http://kotlinlang.org") {+"Kotlin"}
                +"project"
            }
            p {+"some text"}

            // content generated by
            p {
                for (arg in args)
                    +arg
            }
        }
    }

いやー、これやりやすいか？
普通にsetter用意した上でapplyをしていったほうが良さそう
* */

// 基本形
fun user(init: User7.() -> Unit): User7 {
    val user = User7()
    user.init()
    return user
}


fun arms(fingers: String): UserArm {
    return UserArm(fingers)
}

fun legs(feet: String): UserLeg {
    return UserLeg(feet)
}


data class User7(
    var head: UserHead? = null,
    var body: UserBody? = null
) {
    fun head(hair: String): UserHead {
        this.head = UserHead(hair)
        return this.head!!
    }

    fun body(init: UserBody.() -> Unit): UserBody {
        val b = UserBody()
        b.init()
        this.body = b
        return this.body!!
    }

}

data class UserHead(var hair: String = "hairs")
data class UserBody(
    var arms: UserArm? = null,
    var legs: UserLeg? = null
) {
    fun arms(fingers: String): UserArm {
        this.arms = UserArm(fingers)
        return this.arms!!
    }

    fun legs(feet: String): UserLeg {
        this.legs = UserLeg(feet)
        return this.legs!!
    }
}
data class UserArm(var fingers: String = "fingers")

data class UserLeg(var feet: String = "feet")
